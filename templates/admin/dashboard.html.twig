
<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="{{ asset('admin.css') }}">
    <link href="https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="{{ asset('logo.png') }}" class="icone" />
</head>

<body>
<div class="sidebar">
    <div class="logo-details"></div>
    <ul class="nav-links">
        <li>
            <a href="#" onclick="showDashboard()">
                <i class="bx bx-grid-alt"></i>
                <span class="links_name">Dashboard</span>
            </a>
        </li>
        <li>
            <a href="#" onclick="showCustomers()">
                <i class="bx bx-box"></i>
                <span class="links_name">Customers</span>
            </a>
        </li>
        <li>
            <a href="#" onclick="showOrders()">
                <i class="bx bx-list-check"></i>
                <span class="links_name">Orders</span>
            </a>
        </li>
        <li>
            <a href="#" onclick="showMessages()">
                <i class="bx bx-message"></i>
                <span class="links_name">Messages</span>
            </a>
        </li>
        <li class="log_out" id="logOutButton">
            <a href="{{ path('login_page') }}">
                <i class="bx bx-log-out"></i>
                <span class="links_name">Log out</span>
            </a>
        </li>
    </ul>
</div>
<section class="home-section">
    <nav>
        <div class="sidebar-button">
            <i class="bx bx-menu sidebarBtn"></i>
            <span class="dashboard">Dashboard</span>
        </div>
        <div class="profile-details">
            <img src="{{ asset('logo.png') }}" alt="" />
            <span class="admin_name">Admin</span>
        </div>
    </nav>
    <div class="home-content">
        <div class="sales-boxes" id="salesBoxes">

            <div class="top-sales box moving">
                <div class="title"><b>Top Selling Products</b></div>
                <ul class="top-sales-details" id="product-list">
                </ul>

            </div>
            <div class="totalCustomers moving">
                <div style="text-align:center;font-size:22px"><b>Total Customers</b></div>
                <div class="sales-details">

                </div>


            </div>
        </div>
        <div class="chartcontainer center moving">
            <div class="chart">
                <canvas id="myChart"></canvas>
            </div>
        </div>
    </div>
    <div class="customers-list moving" id="customersList"  style="display: none">
        {% for user in users %}
            <div class="customer">
                <div class="customer-info">
                    <span class="info-label">First Name:</span>
                    <span class="info-value"> {{ user.prenom }} </span>
                    <span class="info-label">Last Name:</span>
                    <span class="info-value"> {{ user.nom }} </span>
                </div>
                {% if user.get_is_Banned == 1 %}
                    <button class="ban-button" style="background-color:green" data-id="{{ user.id }}">Unban User</button>
                {% else %}
                    <button class="ban-button" data-id="{{ user.id }}">Ban User</button>
                {% endif %}
            </div>
        {% endfor %}
    </div>
    <div class="orders-list moving" id="ordersList" style="display: none">

    </div>

{#
    <div class="email-form" style=display:none id="emailForm">
        <h1>Send Email</h1>
        {{ form_start(eform) }}
        {{ form_row(eform.recipient) }}
        {{ form_row(eform.subject) }}
        {{ form_row(eform.message) }}
        {{ form_row(eform.send) }}
        {{ form_end(eform) }}
    </div>
    #}



</section>
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js"></script>
<script src="{{ asset('admin.js') }}"></script>
<script>
    const ctx = document.getElementById('myChart');
    let chart;

    function updateChart() {
        fetch('/fetch-chart') // Fetch data from the 'fetch-chart' route
            .then(response => response.json())
            .then(data => {
                if (chart) {
                    chart.data.datasets[0].data = data;
                    chart.update();
                } else {

                    chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ["Pizza", "Spaghetti", "Hamburger", "Cheese Cake", "Orange Juice", "Chawarma", "Fries", "Fried Chicken", "Mojito", "Tiramisu"],
                            datasets: [{
                                label: 'Chart',
                                data: data,
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(255, 159, 64, 0.2)',
                                    'rgba(255, 205, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(201, 203, 207, 0.2)',
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 159, 64, 0.2)'
                                ],
                                borderColor: [
                                    'rgb(255, 99, 132)',
                                    'rgb(255, 159, 64)',
                                    'rgb(255, 205, 86)',
                                    'rgb(75, 192, 192)',
                                    'rgb(54, 162, 235)',
                                    'rgb(153, 102, 255)',
                                    'rgb(201, 203, 207)',
                                    'rgb(255, 99, 132)',
                                    'rgb(54, 162, 235)',
                                    'rgb(255, 159, 64)'

                                ],
                                borderWidth: 0.7,
                                barThickness: 50
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            })
    }
    updateChart();
    setInterval(updateChart, 2000);
</script>
<script>
    async function fetchOrders() {
        const response = await fetch('/fetch-orders'); // Fetch data from the 'fetch-orders' route
        const orders = await response.json();

        // Clear the current orders
        document.querySelector('.orders-list').innerHTML = '';

        // Loop over the orders and display them
        for (let orderId in orders) {
            let firstOrderItem = orders[orderId][0];
            let customerName = firstOrderItem.fname + ' ' + firstOrderItem.lname;
            let cdate = firstOrderItem.cdate;
            let num = firstOrderItem.unum_tel;
            let lieu = firstOrderItem.clieu;

            let orderHTML = `
                <div class="order" style="display:block" data-id="${orderId}">
                    <div class="order-info">
                        <span class="info-label">Order ID:&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${orderId}&nbsp;&nbsp;&nbsp;</span><br>
                        <span class="info-label">Customer :&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${customerName}&nbsp;&nbsp;&nbsp;</span><br>
                        <span class="info-label">Customer number :&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${num}&nbsp;&nbsp;&nbsp;</span><br>
                        <span class="info-label">location :&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${lieu}&nbsp;&nbsp;&nbsp;</span><br>
                        <span class="info-label">Date :&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${cdate}&nbsp;&nbsp;&nbsp;</span><br>
                    </div>
            `;

            orders[orderId].forEach(orderItem => {
                let productName = orderItem.prod;
                let quantity = orderItem.quan;
                orderHTML += `
                    <div class="order-item">
                        <span class="info-label">Product :&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${productName}&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-label">Quantity :&nbsp;&nbsp;&nbsp;</span>
                        <span class="info-value">${quantity}&nbsp;&nbsp;&nbsp;</span>
                    </div>
                `;
            });

            orderHTML += `<button class="done-button">Pending</button></div>`;
            document.querySelector('.orders-list').insertAdjacentHTML('beforeend', orderHTML);
        }
        document.querySelectorAll('.done-button').forEach(button => {
            button.addEventListener('click', function() {
                var orderDiv = this.parentElement;
                var orderId = orderDiv.getAttribute('data-id');


                fetch(`/update-orders/${orderId}`, { // Fetch data from the 'update-order' route
                    method: 'POST',
                });

                orderDiv.style.display = 'none';
            });
        });

    }

    // Fetch orders every 5 seconds
    fetchOrders();
    setInterval(fetchOrders, 5000);
</script>
<script>
    async function calcCustomers() {
        const response = await fetch('/count-users'); // Fetch data from the 'count-users' route
        const data = await response.text();
        console.log(data);
        document.querySelector('.sales-details').innerHTML = `<p style="font-size: 40px;">${data}</p>`;
    }

    // Fetch orders every 5 seconds
    calcCustomers();
    setInterval(calcCustomers, 5000);
</script>
<script>
    function fetchProducts() {
        fetch('/top-selling') // Fetch data from the 'top-selling' route
            .then(response => response.json())
            .then(data => {
                const productList = document.getElementById('product-list');
                productList.innerHTML = '';
                data.forEach(product => {
                    const listItem = document.createElement('li');
                    listItem.innerHTML = `<b>${product.name} </b>${product.vendu} unit`;
                    productList.appendChild(listItem);
                });
            });
    }

    // Fetch products every 5 seconds
    fetchProducts();
    setInterval(fetchProducts, 5000);
</script>





</body>

</html>
